// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_ups.proto

package edu.duke.ece568.minUPS.protocol.UPStoWorld;

public interface UCommandsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protocol.UCommands)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .protocol.UGoPickup pickups = 1;</code>
   */
  java.util.List<edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoPickup> 
      getPickupsList();
  /**
   * <code>repeated .protocol.UGoPickup pickups = 1;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoPickup getPickups(int index);
  /**
   * <code>repeated .protocol.UGoPickup pickups = 1;</code>
   */
  int getPickupsCount();
  /**
   * <code>repeated .protocol.UGoPickup pickups = 1;</code>
   */
  java.util.List<? extends edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoPickupOrBuilder> 
      getPickupsOrBuilderList();
  /**
   * <code>repeated .protocol.UGoPickup pickups = 1;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoPickupOrBuilder getPickupsOrBuilder(
      int index);

  /**
   * <code>repeated .protocol.UGoDeliver deliveries = 2;</code>
   */
  java.util.List<edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoDeliver> 
      getDeliveriesList();
  /**
   * <code>repeated .protocol.UGoDeliver deliveries = 2;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoDeliver getDeliveries(int index);
  /**
   * <code>repeated .protocol.UGoDeliver deliveries = 2;</code>
   */
  int getDeliveriesCount();
  /**
   * <code>repeated .protocol.UGoDeliver deliveries = 2;</code>
   */
  java.util.List<? extends edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoDeliverOrBuilder> 
      getDeliveriesOrBuilderList();
  /**
   * <code>repeated .protocol.UGoDeliver deliveries = 2;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UGoDeliverOrBuilder getDeliveriesOrBuilder(
      int index);

  /**
   * <code>optional uint32 simspeed = 3;</code>
   * @return Whether the simspeed field is set.
   */
  boolean hasSimspeed();
  /**
   * <code>optional uint32 simspeed = 3;</code>
   * @return The simspeed.
   */
  int getSimspeed();

  /**
   * <code>optional bool disconnect = 4;</code>
   * @return Whether the disconnect field is set.
   */
  boolean hasDisconnect();
  /**
   * <code>optional bool disconnect = 4;</code>
   * @return The disconnect.
   */
  boolean getDisconnect();

  /**
   * <code>repeated .protocol.UQuery queries = 5;</code>
   */
  java.util.List<edu.duke.ece568.minUPS.protocol.UPStoWorld.UQuery> 
      getQueriesList();
  /**
   * <code>repeated .protocol.UQuery queries = 5;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UQuery getQueries(int index);
  /**
   * <code>repeated .protocol.UQuery queries = 5;</code>
   */
  int getQueriesCount();
  /**
   * <code>repeated .protocol.UQuery queries = 5;</code>
   */
  java.util.List<? extends edu.duke.ece568.minUPS.protocol.UPStoWorld.UQueryOrBuilder> 
      getQueriesOrBuilderList();
  /**
   * <code>repeated .protocol.UQuery queries = 5;</code>
   */
  edu.duke.ece568.minUPS.protocol.UPStoWorld.UQueryOrBuilder getQueriesOrBuilder(
      int index);

  /**
   * <code>repeated int64 acks = 6;</code>
   * @return A list containing the acks.
   */
  java.util.List<java.lang.Long> getAcksList();
  /**
   * <code>repeated int64 acks = 6;</code>
   * @return The count of acks.
   */
  int getAcksCount();
  /**
   * <code>repeated int64 acks = 6;</code>
   * @param index The index of the element to return.
   * @return The acks at the given index.
   */
  long getAcks(int index);
}
